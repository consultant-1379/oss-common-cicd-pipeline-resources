{
  "appConfig": {},
  "application": "SPINNAKER_APPLICATION_NAME",
  "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten. Template name: base_platform_app_staging_baseline_helmfile.json in repo https://gerrit-gamma.gic.ericsson.se/#/admin/projects/OSS/com.ericsson.oss.cicd/oss-common-cicd-pipeline-resources",
  "disabled": false,
  "name": "APP_SHORT_NAME_UPPERCASE_Baseline_Staging",
  "keepWaitingPipelines": true,
  "limitConcurrent": false,
  "notifications": [],
  "locked": {
    "allowUnlockUi": true,
    "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten",
    "ui": true
  },
  "parameterConfig": [
    {
      "default": "",
      "description": "Name of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Version of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Repo of the microservice chart within the integration chart",
      "hasOptions": false,
      "label": "",
      "name": "CHART_REPO",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "TAGS_PARAMETERS",
      "description": "Site values tags which has to be set to true during deployment",
      "hasOptions": false,
      "label": "",
      "name": "TAGS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "Gerrit REF Spec is used by Inca to pull down a code review to build a new OSS Common Base",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_REFSPEC",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Revision string for the gerrit review. Example: Ieec3b0b65fcdf30872befa2e9ace06e96cd487b4 ",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_PATCHSET_REVISION",
      "pinned": true,
      "required": false
    },
    {
      "default": "master",
      "description": "Gerrit Branch is used by Inca to pull down a code review to build a new OSS Common Base",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_BRANCH",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "SKIP_PRE_TESTING_PARAMETER",
      "description": "",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_PRE_TESTING",
      "options": [
        {
          "value": "false"
        },
        {
          "value": "true"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "0.0.0",
      "description": "Version of the Integration Chart which will be used for the Initial Install",
      "hasOptions": false,
      "label": "",
      "name": "II_INT_CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "PATH_TO_SITE_VALUES_FILE_PARAMETER",
      "description": "The Path where all the necessary site values are located for the install/upgrade",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "PATH_TO_SITE_VALUES_OVERRIDE_FILE_PARAMETER",
      "description": "Path within the Repo to the location of the site values override file. Content of this file will override the content for the site values set in the FULL_PATH_TO_SITE_VALUES_FILE paramater.",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "Set this parameter to true if you wish for the environment to be quarantined if the deployment flow false",
      "hasOptions": false,
      "label": "",
      "name": "QUARANTINE_ENV",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "ENV_LABEL_PARAMETER",
      "description": "This is the label to search for that is attached to the environments in the Lockable Resource Plugin on Jenkins",
      "hasOptions": false,
      "label": "",
      "name": "ENV_LABEL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "FLOW_URL_TAG_PARAMETER",
      "description": "Flow URL Tag is used when locking the environment to add a tag to describe what has locked the environment for easier tracking",
      "hasOptions": false,
      "label": "",
      "name": "FLOW_URL_TAG",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "120",
      "description": "This is the time to wait for an Environment to become available. After the time expires the job will fail out",
      "hasOptions": false,
      "label": "",
      "name": "WAIT_TIME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "HELM_TIMEOUT_PARAMETER",
      "description": "Timeout for helmfile deploy",
      "hasOptions": false,
      "label": "",
      "name": "HELM_TIMEOUT",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "APP_CHART_NAME_PARAMETER",
      "description": "Application chart name",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Version of the app chart that holds the new microservice",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Repo of the app chart that holds the new microservice",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_REPO",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "APP_CHART_GERRIT_PROJECT_PARAMETER",
      "description": "Link to Application chart repository",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_GERRIT_PROJECT",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "If set to true - new Application chart will not be released.  We can use that when ADP dependent chart version comes with \"-\" and we want to include in chart only \"+\" drops",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_CHART_RELEASE",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "Summary of the GIT commit",
      "hasOptions": false,
      "label": "",
      "name": "GIT_COMMIT_SUMMARY",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "URL associated with the gerrit change",
      "hasOptions": false,
      "label": "",
      "name": "GERRIT_CHANGE_URL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "false",
      "description": "If true will run BUR",
      "hasOptions": true,
      "label": "",
      "name": "RUN_BUR_TESTING",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "If true will run install of snapshot",
      "hasOptions": true,
      "label": "",
      "name": "RUN_INSTALL_TESTING",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "true",
      "description": "Set to true to use \"--use-certm\" flag during deployment",
      "hasOptions": true,
      "label": "USE_CERTM_FOR_STATE",
      "name": "USE_CERTM_FOR_STATE",
      "options": [
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "IS_ADP_CHART_PARAMETER",
      "description": "Parameter to determine if chart is a pre-built ADP chart or OSS chart which we build",
      "hasOptions": true,
      "label": "IS_ADP_CHART",
      "name": "IS_ADP_CHART",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "App_Staging",
      "description": "RCR Tag is used to identify the environment by Report Center Registration Stage",
      "hasOptions": false,
      "label": "",
      "name": "RCR_TAG",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "This is used in the rollback scenario where a chart is causing an issue. Caution, ensure the consequence of using this parameter is known.",
      "hasOptions": false,
      "label": "",
      "name": "ALLOW_BASE_BASELINE_DOWNGRADE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "gas-user",
      "description": "The value for the GAS user username",
      "hasOptions": false,
      "label": "",
      "name": "GAS_USER_USERNAME",
      "pinned": true,
      "required": true
    },
    {
      "default": "Ericsson123!",
      "description": "The value for the GAS user password",
      "hasOptions": false,
      "label": "",
      "name": "GAS_USER_PASSWORD",
      "pinned": true,
      "required": true
    }
  ],
  "schema": "1",
  "spelEvaluator": "v4",
  "stages": [
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Quarantine-Environment",
      "master": "oss-fem8s11-eiffel052",
      "name": "Quarantine Namespace",
      "parameters": {
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}"
      },
      "refId": "34",
      "requisiteStageRefIds": [
        "103"
      ],
      "sendNotifications": false,
      "stageEnabled": {
        "expression": "${parameters['QUARANTINE_ENV'].contains('true')} and \"${#stage('Post Upgrade Testing')['status']}\" != \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "name": "Flow Completed",
      "preconditions": [
        {
          "context": {
            "expression": "\"${#stage('Fetch Build Upload Release')['status']}\" == \"SUCCEEDED\" or \"${#stage('Fetch Build Upload Release')['status']}\" == \"SKIPPED\"",
            "failureMessage": "Failed to release App Chart from microservice change"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Post Upgrade Testing')['status']}\" == \"SUCCEEDED\" or \"${#stage('Post Upgrade Testing')['status']}\" == \"SKIPPED\"",
            "failureMessage": "Post Upgrade Testing failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Upgrade using Helmfile')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Upgrade using Helmfile\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Install using Helmfile\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Check Deployment Status')['status']}\" == \"SUCCEEDED\"",
            "failureMessage": "Failed in \"Check Deployment Status\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Get Env Details')['status']}\" == \"SUCCEEDED\"",
            "failureMessage": "Failed in \"Get Env Details\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Fetch Build Upload Snapshot')['status']}\" == \"SUCCEEDED\"",
            "failureMessage": "Failed to build Helmfile snapshot"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Initial Install or BUR Testing using Snapshot Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Initial Install or BUR Testing using Snapshot Helmfile')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"Initial Install or BUR Testing using Snapshot Helmfile\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('NeLS installation verification')['status']}\" == \"SUCCEEDED\" or \"${#stage('NeLS installation verification')['status']}\" == \"SKIPPED\"",
            "failureMessage": "\"NeLS installation verification\" stage failed"
          },
          "failPipeline": true,
          "type": "expression"
        }
      ],
      "refId": "35",
      "requisiteStageRefIds": [
        "81",
        "92"
      ],
      "type": "checkPreconditions"
    },
    {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "BASE-VERS_Retrieve_Baseline_Version",
      "master": "oss-fem8s11-eiffel052",
      "name": "Get Latest EIAP Helmfile Version",
      "parameters": {
        "KEY_TO_RETRIEVE_BASELINE_VERSION_OF": "II_BASELINE_INT_CHART_VERSION",
        "SLAVE": "evo_docker_engine",
        "SPECIFIED_VERSION_FOR_PIPELINE": "${parameters['II_INT_CHART_VERSION']}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}",
        "VERSIONS_FILENAME": "versions"
      },
      "propertyFile": "artifact.properties",
      "refId": "51",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Check-Chart-Version-In-Helmfile",
      "master": "oss-aispinn-fem5s11-eiffel052",
      "name": "Check Chart Version In EIAE Helmfile",
      "parameters": {
        "CHART_NAME": "${trigger['parameters']['INT_CHART_NAME']}",
        "CHART_REPO": "${trigger['parameters']['INT_CHART_REPO']}",
        "CHART_VERSION": "${trigger['parameters']['INT_CHART_VERSION']}",
        "INT_CHART_VERSION": "${#stage('Get Latest EIAP Helmfile Version')['context']['II_BASELINE_INT_CHART_VERSION']}"
      },
      "propertyFile": "comparison_result.properties",
      "refId": "Check Chart Version In EIAE Helmfile",
      "requisiteStageRefIds": [
        "51"
      ],
      "stageEnabled": {
        "expression": "${parameters.INT_CHART_NAME.matches('.*(eric-cloud-native-base|eric-cloud-native-service-mesh).*') && (!parameters.INT_CHART_VERSION.contains('-'))}",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": false,
      "name": "Check Preconditions after Version Check",
      "preconditions": [
        {
          "context": {
            "expression": "${(#stage('Check Chart Version In EIAE Helmfile')['context']['result']) == 'pass' ||  #stage('Check Chart Version In EIAE Helmfile').status == 'SKIPPED'}",
            "failureMessage": "eric-cloud-native-base_version lower then in helmfile"
          },
          "failPipeline": false,
          "type": "expression"
        }
      ],
      "refId": "Check Preconditions after Version Check",
      "requisiteStageRefIds": [
        "Check Chart Version In EIAE Helmfile"
      ],
      "stageEnabled": {
        "expression": "${parameters.INT_CHART_NAME.matches('.*(eric-cloud-native-base|eric-cloud-native-service-mesh).*') && (!parameters.INT_CHART_VERSION.contains('-'))}",
        "type": "expression"
      },
      "type": "checkPreconditions"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": true,
      "failPipeline": false,
      "name": "Evaluate  Version Variables",
      "refId": "Evaluate  Version Variables",
      "requisiteStageRefIds": [
        "Check Chart Version In EIAE Helmfile"
      ],
      "type": "evaluateVariables",
      "variables": [
        {
          "key": "SKIP_PRA_BUILD",
          "value": "${((#stage('Check Chart Version In EIAE Helmfile')['context']['result']) != 'pass' && #stage('Check Chart Version In EIAE Helmfile').status != 'SKIPPED')}"
        }
      ]
    },
    {
      "application": "base-platform-staging",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Post Upgrade Testing",
      "notifications": [
        {
        "address": "PDLTEAMPER@pdl.internal.ericsson.com",
        "level": "stage",
        "message": {
          "stage.failed": {
            "text": "<h4 style='color:red'>PIPELINE FAILED</h4>Failure has occurred in Post Upgrade Testing Flow.<br>"
          }
        },
        "type": "email",
        "when": [
          "stage.failed"
        ]
        }
      ],
      "pipeline": "df829e0a-eb9c-46e6-9aab-14dae377b630",
      "pipelineParameters": {
        "BDR_HOSTNAME": "${#stage('Get Env Details')['context']['BDR_HOST_REPLACE']}",
        "EIC_HOSTNAME": "${#stage('Get Env Details')['context']['EIC_HOST_REPLACE']}",
        "GAS_HOSTNAME": "${#stage('Get Env Details')['context']['GAS_HOST_REPLACE']}",
        "GAS_USER_PASSWORD": "${trigger['parameters']['GAS_USER_PASSWORD']}",
        "GAS_USER_USERNAME": "${trigger['parameters']['GAS_USER_USERNAME']}",
        "IAM_HOSTNAME": "${#stage('Get Env Details')['context']['EIC_HOST_REPLACE']}",
        "KUBE_CONFIG": "${#stage('Get Env Details')['context']['KUBE_CONFIG']}",
        "NAMESPACE": "${#stage('Get Env Details')['context']['NAMESPACE']}",
        "PRODUCT_VERSION": "${#stage('Fetch Build Upload Snapshot')['context']['INT_CHART_VERSION']}",
        "RESOURCE_NAME": "${#stage('Reserve Namespace')['context']['RESOURCE_NAME']}"
      },
      "refId": "66",
      "requisiteStageRefIds": [
        "90"
      ],
      "sendNotifications": true,
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Common-Testing",
      "master": "oss-fem8s11-eiffel052",
      "name": "Pre Code Test",
      "notifications": [],
      "parameters": {
        "APP_NAME": "${parameters['INT_CHART_NAME']}",
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_PATH": "charts/${parameters['INT_CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "GERRIT_PATCHSET_REVISION": "${parameters['GERRIT_PATCHSET_REVISION']}",
        "GERRIT_PROJECT": "${parameters['INT_CHART_GERRIT_PROJECT']}",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GERRIT_USER_SECRET": "ossapps100-user-creds",
        "GIT_REPO_URL": "https://gerrit-gamma.gic.ericsson.se/a/${parameters['INT_CHART_GERRIT_PROJECT']}.git",
        "HELM_REPO_CREDENTIALS_ID": "ossapps100_helm_repository_creds_file",
        "VCS_BRANCH": "${parameters['GERRIT_BRANCH']}"
      },
      "propertyFile": "",
      "refId": "77",
      "requisiteStageRefIds": [],
      "sendNotifications": true,
      "stageTimeoutMs": 2400000,
      "type": "jenkins"
    },
    {
      "application": "base-platform-staging",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "name": "Fetch Build Upload Snapshot",
      "pipeline": "7be8f6ff-3424-4048-bca2-5c23bb38bc05",
      "pipelineParameters": {
        "ALLOW_BASE_BASELINE_DOWNGRADE": "${parameters['ALLOW_BASE_BASELINE_DOWNGRADE']}",
        "APP_CHART_GIT_REPO_URL": "https://gerrit-gamma.gic.ericsson.se/a/${parameters['INT_CHART_GERRIT_PROJECT']}.git",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "GERRIT_BRANCH": "${parameters['GERRIT_BRANCH']}",
        "GERRIT_CHANGE_URL": "${parameters['GERRIT_CHANGE_URL']}",
        "GERRIT_PREPARE_OR_PUBLISH": "prepare",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GIT_COMMIT_SUMMARY": "${parameters['GIT_COMMIT_SUMMARY']}",
        "HELMFILE_CHART_VERSION": "${#stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "HELMFILE_UPLOAD": "true",
        "INT_CHART_NAME": "${parameters['INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${parameters['INT_CHART_VERSION']}",
        "IS_ADP_CHART": "${parameters['IS_ADP_CHART']}"
      },
      "refId": "78",
      "requisiteStageRefIds": [
        "Check Preconditions after Version Check",
        "Evaluate  Version Variables"
      ],
      "sendNotifications": false,
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "BP-Reserve_Namespace",
      "master": "oss-fem8s11-eiffel052",
      "name": "Reserve Namespace",
      "parameters": {
        "ENV_LABEL": "${parameters['ENV_LABEL']}",
        "FLOW_URL": "https://spinnaker.rnd.gic.ericsson.se/#/applications/${execution['application']}/executions/details/${execution.id}",
        "FLOW_URL_TAG": "${parameters['FLOW_URL_TAG']}",
        "WAIT_TIME": "${parameters['WAIT_TIME']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "80",
      "requisiteStageRefIds": [
        "78"
      ],
      "stageTimeoutMs": 14400000,
      "type": "jenkins"
    },
    {
      "application": "base-platform-staging",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Fetch Build Upload Release",
      "pipeline": "7be8f6ff-3424-4048-bca2-5c23bb38bc05",
      "pipelineParameters": {
        "ALLOW_BASE_BASELINE_DOWNGRADE": "${parameters['ALLOW_BASE_BASELINE_DOWNGRADE']}",
        "APP_CHART_GIT_REPO_URL": "https://gerrit-gamma.gic.ericsson.se/a/${parameters['INT_CHART_GERRIT_PROJECT']}.git",
        "CHART_NAME": "${parameters['CHART_NAME']}",
        "CHART_REPO": "${parameters['CHART_REPO']}",
        "CHART_VERSION": "${parameters['CHART_VERSION']}",
        "GERRIT_BRANCH": "${parameters['GERRIT_BRANCH']}",
        "GERRIT_CHANGE_URL": "${parameters['GERRIT_CHANGE_URL']}",
        "GERRIT_PREPARE_OR_PUBLISH": "publish",
        "GERRIT_REFSPEC": "${parameters['GERRIT_REFSPEC']}",
        "GIT_COMMIT_SUMMARY": "${parameters['GIT_COMMIT_SUMMARY']}",
        "HELMFILE_CHART_VERSION": "${#stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "HELMFILE_UPLOAD": "false",
        "INT_CHART_NAME": "${parameters['INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${parameters['INT_CHART_VERSION']}",
        "IS_ADP_CHART": "${parameters['IS_ADP_CHART']}"
      },
      "refId": "81",
      "requisiteStageRefIds": [
        "103"
      ],
      "sendNotifications": false,
      "stageEnabled": {
        "expression": "\"${#stage('Post Upgrade Testing')['status']}\" == \"SUCCEEDED\" and (\"${#stage('Initial Install or BUR Testing using Snapshot Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Initial Install or BUR Testing using Snapshot Helmfile')['status']}\" == \"SKIPPED\") and \"${parameters['SKIP_CHART_RELEASE']}\" == \"false\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": false,
      "failPipeline": false,
      "job": "OSS-Integration-Helmfile-Deploy",
      "master": "oss-fem8s11-eiffel052",
      "name": "Upgrade using Helmfile",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "CRD_NAMESPACE": "eric-crd-ns",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOYMENT_TYPE": "upgrade",
        "DEPLOY_ALL_CRDS": "true",
        "ENV_CONFIG_FILE": "oss-common-ci/ci-infrastructure/pooling/resources/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "FUNCTIONAL_USER_SECRET": "ossapps100-user-creds",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "INT_CHART_NAME": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${#stage('Get Env Details')['context']['PATH_TO_CERTIFICATES_FILES']}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "TAGS": "${parameters['TAGS']}",
        "USE_CERTM": "${parameters['USE_CERTM_FOR_STATE']}",
        "USE_DM_PREPARE": "true",
        "USE_SKIP_UPGRADE_FOR_UNCHANGED_RELEASES": "${#stage(\"DM version validation\")[\"context\"][\"USE_SKIP_UPGRADE_FOR_UNCHANGED_RELEASES\"]}"
      },
      "propertyFile": "artifact.properties",
      "refId": "90",
      "requisiteStageRefIds": [
        "108"
      ],
      "stageEnabled": {
        "expression": "( '${#stage('Install using Helmfile')['status']}' == 'SUCCEEDED' or '${#stage('Install using Helmfile')['status']}' == 'SKIPPED' ) and '${#stage('Check Deployment Status')['status']}' == 'SUCCEEDED' and '${#stage('Fetch Build Upload Snapshot')['status']}' == 'SUCCEEDED' and ('${#stage('NeLS installation verification')['status']}' == 'SUCCEEDED' or '${#stage('NeLS installation verification')['status']}' == 'SKIPPED')",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "application": "common-e2e-cicd",
      "failPipeline": true,
      "name": "Redeploy-Namespace",
      "pipeline": "4ec4b5df-b15b-4b90-afaf-4bf96ccf1a7c",
      "pipelineParameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOY_ALL_CRDS": "true",
        "ENV_CONFIG_FILE": "oss-common-ci/ci-infrastructure/pooling/resources/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "INT_CHART_NAME": "eric-eiae-helmfile",
        "INT_CHART_REPO": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm-local",
        "INT_CHART_VERSION": "${#stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${#stage('Get Env Details')['context']['PATH_TO_CERTIFICATES_FILES']}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "TAGS": "${parameters['TAGS']}",
        "USE_CERTM": "${parameters['USE_CERTM_FOR_STATE']}",
        "USE_DM_PREPARE": "true"
      },
      "refId": "92",
      "requisiteStageRefIds": [
        "34",
        "103"
      ],
      "sendNotifications": false,
      "stageEnabled": {
        "expression": "\"${#stage('Quarantine Namespace')['status']}\" == \"SKIPPED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": false
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Staging-Report-Register",
      "master": "oss-fem4s11-eiffel216",
      "name": "Report Center Registration",
      "parameters": {
        "EXEC_ID": "${execution.id}"
      },
      "refId": "Report_Center_Registration",
      "requisiteStageRefIds": [
        "Check Preconditions after Version Check"
      ],
      "type": "jenkins",
      "waitForCompletion": false
    },
    {
      "application": "eoapp",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Check-Helmfile-Deployment-Status",
      "master": "oss-fem8s11-eiffel052",
      "name": "Check Deployment Status",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "CHECK_FULL_VERSION": "false",
        "FUNCTIONAL_USER_SECRET": "ossapps100-user-creds",
        "INT_CHART_VERSION": "${#stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OPTIONAL_TAGS": "${parameters['TAGS']}",
        "PATH_TO_HELMFILE": "eric-eiae-helmfile/helmfile.yaml",
        "TAGS": "${parameters['TAGS']}"
      },
      "pipeline": "bb20d8c5-8fb2-4576-8d57-063a3098f235",
      "pipelineParameters": {},
      "propertyFile": "artifact.properties",
      "refId": "94",
      "requisiteStageRefIds": [
        "100"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Get Env Details')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-Gather-Env-Details",
      "master": "oss-fem8s11-eiffel052",
      "name": "Get Env Details",
      "parameters": {
        "ENV_DETAILS_DIR": "oss-common-ci/ci-infrastructure/pooling/resources",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}"
      },
      "propertyFile": "artifact.properties",
      "refId": "96",
      "requisiteStageRefIds": [
        "80"
      ],
      "type": "jenkins"
    },
    {
      "application": "common-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Install using Helmfile",
      "pipeline": "4ec4b5df-b15b-4b90-afaf-4bf96ccf1a7c",
      "pipelineParameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOY_ALL_CRDS": "true",
        "ENV_CONFIG_FILE": "oss-common-ci/ci-infrastructure/pooling/resources/${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}.conf",
        "ENV_NAME": "${#stage(\"Reserve Namespace\")[\"context\"][\"RESOURCE_NAME\"]}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "GAS_USER_PASSWORD": "${trigger['parameters']['GAS_USER_PASSWORD']}",
        "GAS_USER_USERNAME": "${trigger['parameters']['GAS_USER_USERNAME']}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "INT_CHART_NAME": "eric-eiae-helmfile",
        "INT_CHART_REPO": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm-local",
        "INT_CHART_VERSION": "${#stage(\"Get Latest EIAP Helmfile Version\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "PATH_TO_CERTIFICATES_FILES": "oss-common-ci/${#stage('Get Env Details')['context']['PATH_TO_CERTIFICATES_FILES']}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "PERFORM_REDEPLOY": "true",
        "TAGS": "${parameters['TAGS']}",
        "UNRESERVE_ENVIRONMENT": "false",
        "USE_CERTM": "${parameters['USE_CERTM_FOR_STATE']}",
        "USE_DM_PREPARE": "true"
      },
      "refId": "99",
      "requisiteStageRefIds": [
        "94"
      ],
      "sendNotifications": false,
      "stageEnabled": {
        "expression": "${#stage(\"Check Deployment Status\")[\"context\"][\"SKIP_DELETION\"].contains(\"false\")} && \"${#stage('Check Deployment Status')['status']}\" == \"SUCCEEDED\" && \"${#stage('Set DDP Details')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": true,
      "failPipeline": false,
      "name": "Set DDP Details",
      "refId": "100",
      "requisiteStageRefIds": [
        "96"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Get Env Details')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "evaluateVariables",
      "variables": [
        {
          "key": "DDP_AUTO_UPLOAD",
          "value": "${#stage(\"Get Env Details\")[\"context\"][\"DDP_ID\"]!=null and #stage(\"Get Env Details\")[\"context\"][\"DDP_ACCOUNT\"]!=null  and #stage(\"Get Env Details\")[\"context\"][\"DDP_PASSWORD\"]!=null ? \"true\": \"false\" }"
        }
      ]
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "method": "POST",
      "name": "Create Pipeline Execution Dashboard Entry",
      "payload": {
        "applicationName": "${execution.trigger.parameters.INT_CHART_NAME}",
        "chartReleaseSkipped": "${execution.trigger.parameters.SKIP_CHART_RELEASE.toString()}",
        "executionId": "${execution.id}",
        "gitCommitSummary": "${execution.trigger.parameters.GIT_COMMIT_SUMMARY.toString()}",
        "links": [
          {
            "href": "https://spinnaker.rnd.gic.ericsson.se/#/applications/${execution.application}/executions/details/${execution.id}",
            "rel": "Spinnaker Execution"
          },
          {
            "href": "${execution.trigger.parameters.GERRIT_CHANGE_URL.contains('https://') ? execution.trigger.parameters.GERRIT_CHANGE_URL : 'https://'+execution.trigger.parameters.GERRIT_CHANGE_URL}",
            "rel": "${execution.trigger.parameters.GERRIT_CHANGE_URL.contains('https://') ? 'Gerrit Commit URL' : 'Invalid Gerrit Commit URL'}"
          }
        ],
        "microserviceName": "${(execution.trigger.parameters.CHART_NAME != '') and (execution.trigger.parameters.CHART_NAME != 'None') ? execution.trigger.parameters.CHART_NAME : 'N/A'}",
        "microserviceVersion": "${(execution.trigger.parameters.CHART_VERSION != '') and (execution.trigger.parameters.CHART_VERSION != 'None') ? execution.trigger.parameters.CHART_VERSION : 'N/A'}",
        "pipelineExecutionProperties": {
          "executionType": "${execution.trigger.parameters.SKIP_CHART_RELEASE.toString()=='false'?'Release Loop':'Non-Release Loop'}"
        },
        "productName": "N/A",
        "productVersion": "N/A",
        "spinnakerApplication": "${execution.application}",
        "spinnakerPipelineName": "${execution.name}",
        "stagingArea": "APPLICATION",
        "start": "${new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\").format(new java.util.Date(execution['startTime']))}",
        "status": "${execution.status}",
        "testwareVersion": "N/A"
      },
      "refId": "Create Pipeline Execution Dashboard Entry",
      "requisiteStageRefIds": [],
      "statusUrlResolution": "getMethod",
      "type": "webhook",
      "url": "https://ped.ews.gic.ericsson.se/api/v1/pipeline-executions"
    },
    {
      "application": "baselinetoolapp",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Create Baseline Tool Microservice Entry",
      "pipeline": "1f36b9d9-5eff-4304-8a46-61e5a558fc34",
      "pipelineParameters": {
        "codeReview": "${execution.trigger.parameters.GERRIT_CHANGE_URL}",
        "name": "${execution.trigger.parameters.CHART_NAME}",
        "ticket": "${execution.trigger.parameters.GIT_COMMIT_SUMMARY}",
        "version": "${execution.trigger.parameters.CHART_VERSION}"
      },
      "refId": "Create Baseline Tool Microservice Entry",
      "requisiteStageRefIds": [],
      "stageEnabled": {
        "expression": "execution.trigger.parameters['CHART_NAME'] != '' && execution.trigger.parameters['CHART_VERSION'] != '' && !execution.trigger.parameters['SKIP_CHART_RELEASE']",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": false
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CheckDmVersion",
      "master": "oss-fem8s11-eiffel052",
      "name": "DM version validation",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config"
      },
      "propertyFile": "comparison_result.properties",
      "refId": "102",
      "requisiteStageRefIds": [
        "107"
      ],
      "type": "jenkins"
    },
    {
      "application": "base-platform-staging",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Initial Install or BUR Testing using Snapshot Helmfile",
      "pipeline": "6805c4a6-67b2-457b-9666-a3399a9e793e",
      "pipelineParameters": {
        "DDP_AUTO_UPLOAD": "${DDP_AUTO_UPLOAD}",
        "DEPLOYMENT_MANAGER_VERSION": "${#stage(\"Upgrade using Helmfile\")[\"context\"][\"DEPLOYMENT_MANAGER_VERSION\"]}",
        "GAS_HOSTNAME": "${#stage(\"Get Env Details\")[\"context\"][\"GAS_HOST_REPLACE\"]}",
        "INT_CHART_NAME": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "${#stage(\"Fetch Build Upload Snapshot\")[\"context\"][\"INT_CHART_VERSION\"]}",
        "KUBE_CONFIG": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "PATH_TO_CERTIFICATES_FILES": "${#stage('Get Env Details')['context']['PATH_TO_CERTIFICATES_FILES']}",
        "PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "RESOURCE_NAME": "${#stage('Reserve Namespace')['context']['RESOURCE_NAME']}",
        "RUN_BUR_TESTING": "${parameters[\"RUN_BUR_TESTING\"]}",
        "SFTP_NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"SFTP_NAMESPACE\"]}",
        "TAGS": "${parameters['TAGS']}",
        "USE_CERTM_FOR_STATE": "${parameters['USE_CERTM_FOR_STATE']}"
      },
      "refId": "103",
      "requisiteStageRefIds": [
        "66"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Post Upgrade Testing')['status']}\" == \"SUCCEEDED\" and  ( '${parameters[\"RUN_INSTALL_TESTING\"]}' == 'true' or '${parameters[\"RUN_BUR_TESTING\"]}' == 'true' )",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "NeLS-simulator-installation",
      "master": "oss-fem8s11-eiffel052",
      "name": "NeLS installation verification",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "FUNCTIONAL_USER_CREDENTIALS": "ossapps100-user-creds",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "LICENSE_KEYS": "false",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}"
      },
      "propertyFile": "",
      "refId": "107",
      "requisiteStageRefIds": [
        "99"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Check Deployment Status')['status']}\" == \"SUCCEEDED\" and \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\" and \"${parameters['SKIP_PRE_TESTING']}\" == \"true\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Deployment_Pre_Upgrade_Steps_EIC_BP",
      "master": "oss-fem8s11-eiffel052",
      "name": "Pre Upgrade Steps",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "ossapps100-arm-docker-auth-config",
        "GAS_USER_PASSWORD_VALUE": "${trigger['parameters']['GAS_USER_PASSWORD']}",
        "GAS_USER_USERNAME_VALUE": "${trigger['parameters']['GAS_USER_USERNAME']}",
        "KUBECONFIG_FILE": "${#stage(\"Get Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Get Env Details\")[\"context\"][\"NAMESPACE\"]}"
      },
      "refId": "108",
      "requisiteStageRefIds": [
        "102",
        "78"
      ],
      "stageEnabled": {
        "expression": "( '${#stage('Install using Helmfile')['status']}' == 'SUCCEEDED' or '${#stage('Install using Helmfile')['status']}' == 'SKIPPED' ) and '${#stage('Check Deployment Status')['status']}' == 'SUCCEEDED' and '${#stage('Fetch Build Upload Snapshot')['status']}' == 'SUCCEEDED' and ('${#stage('NeLS installation verification')['status']}' == 'SUCCEEDED' or '${#stage('NeLS installation verification')['status']}' == 'SKIPPED')",
        "type": "expression"
      },
      "type": "jenkins"
    }
  ],
  "triggers": []
}
