{
  "application": "SPINNAKER_APPLICATION_NAME",
  "name": "SPINNAKER_PIPELINE_NAME",
  "appConfig": {},
  "description": "The is a CI Release pipeline to be used by Team TicketMaster",
  "keepWaitingPipelines": false,
  "limitConcurrent": false,
  "locked": {
    "allowUnlockUi": true,
    "description": "This pipeline is maintained by Spinnaker as a code, any changes made through the UI will be overwritten. Please see https://gerrit-gamma.gic.ericsson.se/plugins/gitiles/OSS/com.ericsson.oss.aeonic/oss-integration-ci/+/refs/heads/master/docs/flows/Internal_CI_Test_Flow.md for details",
    "ui": true
  },
  "parameterConfig": [
    {
      "default": "armdocker.rnd.ericsson.se/proj-eric-oss-drop/eric-oss-ci-scripts:latest",
      "description": "",
      "hasOptions": false,
      "label": "CI Docker image under test",
      "name": "CI_DOCKER_IMAGE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "oss-deploy",
      "description": "Namespace to be used to execute deployment against on the kubernetes system",
      "hasOptions": false,
      "label": "Namespace",
      "name": "NAMESPACE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "crd-namespace",
      "description": "CRD Namespace to be used to execute the CRD deployment against on the kubernetes system",
      "hasOptions": false,
      "label": "CRD Namespace",
      "name": "CRD_NAMESPACE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "Kubeconfig file id stored in the Jenkins secret area",
      "hasOptions": false,
      "label": "Kubernetes Config File ID",
      "name": "KUBECONFIG_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "admin",
      "description": "Key Cloak Admin User (--from-literal=kcadminid=<KC_ADMIN_ID>)",
      "hasOptions": false,
      "label": "Key Cloak Admin User ",
      "name": "KC_ADMIN_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Ericsson123!",
      "description": "Key Cloak Admin Password (--from-literal=kcpasswd=<KC_PASSWORD>)",
      "hasOptions": false,
      "label": "Key Cloak Admin Password",
      "name": "KC_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "admin",
      "description": "Key Cloak Postgres Admin User (--from-literal=pguserid=<PG_USER_ID>)",
      "hasOptions": false,
      "label": "Key Cloak Postgres Admin User",
      "name": "PG_USER_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Ericsson-pw123!",
      "description": "Key Cloak Postgres Admin Password (--from-literal=pgpasswd=<PG_PASSWORD>) ",
      "hasOptions": false,
      "label": "Key Cloak Postgres Admin Password",
      "name": "PG_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "eo_user",
      "description": "Postgres Custom user used in the creation of the generic secret (--from-literal=custom-user=<CUSTOM_USER_ID>)",
      "hasOptions": false,
      "label": "Postgres Custom User",
      "name": "CUSTOM_USER_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "Postgres123!",
      "description": "Postgres Custom Password  used in the creation of the generic secret (--from-literal=custom-pwd=<CUSTOM_PASSWORD>)",
      "hasOptions": false,
      "label": "Postgres Custom Password",
      "name": "CUSTOM_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "exporter",
      "description": "Postgres Metric User used in the creation of the generic secret (--from-literal=metrics-user=<METRICS_USER_ID>)",
      "hasOptions": false,
      "label": "Postgres Metrics User",
      "name": "METRICS_USER_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Postgres123!",
      "description": "Postgres Metric Password  used in the creation of the generic secret (--from-literal=metrics-pwd=<METRICS_PASSWORD>)",
      "hasOptions": false,
      "label": "Postgres Metrics Password",
      "name": "METRICS_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "replica",
      "description": "Postgres Replica User used in the creation of the generic secret (--from-literal=replica-user=<REPLICA_USER_ID>)",
      "hasOptions": false,
      "label": "Postgres Replica User ID",
      "name": "REPLICA_USER_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Postgres123!",
      "description": "Postgres Replica Password used in the creation of the generic secret (--from-literal=replica-pwd=<REPLICA_PASSWORD>)",
      "hasOptions": false,
      "label": "Postgres Replica Password",
      "name": "REPLICA_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "postgres",
      "description": "Postgres Super User used in the creation of the generic secret (--from-literal=super-user=<SUPER_USER_ID>)",
      "hasOptions": false,
      "label": "Postgres Super User ID",
      "name": "SUPER_USER_ID",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Postgres123!",
      "description": "Postgres Super User Password used in the creation of the generic secret (--from-literal=super-pwd=<SUPER_PASSWORD>)",
      "hasOptions": false,
      "label": "Postgres Super User Password",
      "name": "SUPER_PASSWORD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "true",
      "description": "Used to Create a custom cluster role, should be used in conjunction with the site values when the  \"global.createClusterRoles=false\" is set.",
      "hasOptions": false,
      "label": "Create Custom Cluster Role",
      "name": "CUSTOM_CLUSTER_ROLE",
      "options": [],
      "pinned": false,
      "required": true
    },
    {
      "default": "eric-eo",
      "description": "This is the release or project name i.e. eric-eo or  eric-oss-common-base. It is used to set the releas within the custom cluster role if the option is turned on ( metadata:   name: <CLUSTER_ROLE_RELEASE_NAME>-<NAMESPACE_NAME>-allowed-use-privileged-policy",
      "hasOptions": false,
      "label": "ClUSTER_ROLE_RELEASE NAME",
      "name": "CLUSTER_ROLE_RELEASE_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "refs/heads/master",
      "description": "Gerrit RefSpec to be able to test the flow against a review before merge. Use with caution",
      "hasOptions": false,
      "label": "Gerrit Ref Spec",
      "name": "GERRIT_REFSPEC",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "evo_docker_engine",
      "description": "Jenkins Slave where this flow should be executed from",
      "hasOptions": false,
      "label": "SLAVE LABEL",
      "name": "SLAVE_LABEL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "None",
      "description": "Bucket in OST that stores the environemtn files i.e. kube_config.yaml",
      "hasOptions": false,
      "label": "",
      "name": "ENV_FILES_BUCKET_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "None",
      "description": "functional user secret credentials fro jenkins credentials manager",
      "hasOptions": false,
      "label": "",
      "name": "FUNCTIONAL_USER_SECRET",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "eric-odca-diagnostic-data-collector-sftp-credentials",
      "description": "SFTP Server Secret name to be created",
      "hasOptions": false,
      "label": "",
      "name": "SFTP_SECRET_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "odca-ddc-sftp-credentials",
      "description": "Jenkins credentials consisting of a username and password for use when creating the secret",
      "hasOptions": false,
      "label": "",
      "name": "SFTP_CREDENTIALS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    }
  ],
  "schema": "1",
  "spelEvaluator": "v4",
  "stages": [
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CI-Test-predeploy-sec-access-mgmt",
      "master": "CONTROLLER1",
      "name": "Secret : eric-sec-access-mgmt-creds",
      "parameters": {
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}",
        "KC_ADMIN_ID": "${trigger['parameters']['KC_ADMIN_ID']}",
        "KC_PASSWORD": "${trigger['parameters']['KC_PASSWORD']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "PG_PASSWORD": "${trigger['parameters']['PG_PASSWORD']}",
        "PG_USER_ID": "${trigger['parameters']['PG_USER_ID']}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Secret : eric-sec-access-mgmt-creds",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CI-Test-predeploy-database-pg-secret",
      "master": "CONTROLLER1",
      "name": "Secret : eric-eo-database-pg-secret",
      "parameters": {
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "CUSTOM_PASSWORD": "${trigger['parameters']['CUSTOM_PASSWORD']}",
        "CUSTOM_USER_ID": "${trigger['parameters']['CUSTOM_USER_ID']}",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "METRICS_PASSWORD": "${trigger['parameters']['CUSTOM_PASSWORD']}",
        "METRICS_USER_ID": "${trigger['parameters']['METRICS_USER_ID']}",
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "REPLICA_PASSWORD": "${trigger['parameters']['REPLICA_PASSWORD']}",
        "REPLICA_USER_ID": "${trigger['parameters']['REPLICA_USER_ID']}",
        "SECRET_NAME": "eric-eo-database-pg-secret",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}",
        "SUPER_PASSWORD": "${trigger['parameters']['SUPER_PASSWORD']}",
        "SUPER_USER_ID": "${trigger['parameters']['SUPER_USER_ID']}"
      },
      "refId": "Secret : eric-eo-database-pg-secret",
      "requisiteStageRefIds": [],
      "stageEnabled": {
        "expression": "",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": false,
      "job": "CI-Test-predeploy-custom-cluster-role",
      "master": "CONTROLLER1",
      "name": "Custom Cluster Role : PriviliegedPolicyClusterRole",
      "parameters": {
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "RELEASE_NAME": "${trigger['parameters']['CLUSTER_ROLE_RELEASE_NAME']}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Custom Cluster Role : PriviliegedPolicyClusterRole",
      "requisiteStageRefIds": [],
      "stageEnabled": {
        "expression": "'${trigger['parameters']['CUSTOM_CLUSTER_ROLE']}' == 'true'",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "name": "Check Secret & Cluster Role Creation",
      "preconditions": [
        {
          "context": {
            "stageName": "Secret : eric-sec-access-mgmt-creds",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        },
        {
          "context": {
            "stageName": "Secret : eric-eo-database-pg-secret",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        },
        {
          "context": {
            "expression": "\"${#stage('Custom Cluster Role : PriviliegedPolicyClusterRole')['status']}\" == \"SUCCEEDED\" or \"${#stage('Custom Cluster Role : PriviliegedPolicyClusterRole')['status']}\" == \"SKIPPED\"",
            "failureMessage": ""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "stageName": "Secret: enm-secret",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        },
        {
          "context": {
            "stageName": "Secret : eric-sec-access-mgmt-aapxy-creds",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        },
        {
          "context": {
            "stageName": "Secret : eric-odca-diagnostic-data-collector-sftp-credentials",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        }
      ],
      "refId": "Check Secret & Cluster Role Creation",
      "requisiteStageRefIds": [
        "Secret : eric-sec-access-mgmt-creds",
        "Secret : eric-eo-database-pg-secret",
        "Custom Cluster Role : PriviliegedPolicyClusterRole",
        "Secret: enm-secret",
        "Secret : eric-sec-access-mgmt-aapxy-creds",
        "Secret : eric-odca-diagnostic-data-collector-sftp-credentials"
      ],
      "type": "checkPreconditions"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CI-Test-predeploy-vnfm-secret",
      "master": "CONTROLLER1",
      "name": "Secret: enm-secret",
      "parameters": {
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "ENM_SCRIPTING_CLUSTER_IP": "1.1.1.1",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Secret: enm-secret",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CI-Test-predeploy-sec-access-mgmt-aapxy",
      "master": "CONTROLLER1",
      "name": "Secret : eric-sec-access-mgmt-aapxy-creds",
      "parameters": {
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Secret : eric-sec-access-mgmt-aapxy-creds",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CI-Test-predeploy-eric-odca-sftp-server-secret",
      "master": "CONTROLLER1",
      "name": "Secret : eric-odca-diagnostic-data-collector-sftp-credentials",
      "parameters": {
        "NAMESPACE": "${trigger['parameters']['NAMESPACE']}",
        "KUBECONFIG_FILE": "${trigger['parameters']['KUBECONFIG_FILE']}",
        "ENV_FILES_BUCKET_NAME": "${trigger['parameters']['ENV_FILES_BUCKET_NAME']}",
        "FUNCTIONAL_USER_SECRET": "${trigger['parameters']['FUNCTIONAL_USER_SECRET']}",
        "SECRET_NAME": "${trigger['parameters']['SFTP_SECRET_NAME']}",
        "SFTP_CREDENTIALS": "${trigger['parameters']['SFTP_CREDENTIALS']}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}",
        "CI_DOCKER_IMAGE": "${trigger['parameters']['CI_DOCKER_IMAGE']}",
        "GERRIT_REFSPEC": "${trigger['parameters']['GERRIT_REFSPEC']}"
      },
      "refId": "Secret : eric-odca-diagnostic-data-collector-sftp-credentials",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    }
  ],
  "tags": [
    {
      "name": "CONTROLLER1",
      "value": "SPINNAKER_PIPELINE_NAME"
    }
  ],
  "triggers": []
}
