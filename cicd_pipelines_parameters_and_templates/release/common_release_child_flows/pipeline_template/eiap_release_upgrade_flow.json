{
  "appConfig": {},
  "keepWaitingPipelines": false,
  "limitConcurrent": false,
  "application": "SPINNAKER_APPLICATION_NAME",
  "name": "SPINNAKER_PIPELINE_NAME",
  "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten. Template name: eiap_release_upgrade_flow.json in repo https://gerrit-gamma.gic.ericsson.se/#/admin/projects/OSS/com.ericsson.oss.cicd/oss-common-cicd-pipeline-resources,branches",
  "locked": {
    "allowUnlockUi": true,
    "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten",
    "ui": true
  },
  "notifications": [
    {
      "address": "NOTIFICATION_ADDRESS",
      "level": "pipeline",
      "message": {
        "pipeline.failed": {
          "text": "The pipeline has failed."
        }
      },
      "type": "email",
      "when": [
        "pipeline.failed"
      ]
    }
  ],
  "parameterConfig": [
    {
      "default": "",
      "description": "Name of the deployment",
      "hasOptions": false,
      "label": "",
      "name": "DEPLOYMENT_NAME",
      "options": [],
      "pinned": true,
      "required": true
    },
    {
      "default": "Release_Staging_Child_Flow",
      "description": "RCF Tag is used to identify the environment by Report Center Registration Stage for Child flows",
      "hasOptions": false,
      "label": "",
      "name": "RCF_TAG",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Namespace of environment",
      "hasOptions": false,
      "label": "",
      "name": "NAMESPACE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Kubernetes configuration file to specify which environment to install on",
      "hasOptions": false,
      "label": "",
      "name": "KUBECONFIG_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Path within the Repo to the location of the certificates directory",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_CERTIFICATES_FILES",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "The version of integration chart",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Option to use real CSAR. If false then dummy CSAR will be used",
      "hasOptions": false,
      "label": "",
      "name": "USE_REAL_CSAR",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for GAS",
      "hasOptions": false,
      "label": "",
      "name": "GAS_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for IAM",
      "hasOptions": false,
      "label": "",
      "name": "IAM_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for ADC",
      "hasOptions": false,
      "label": "",
      "name": "ADC_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for APPMGR",
      "hasOptions": false,
      "label": "",
      "name": "APPMGR_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for Bulk Data Repository (BDR)",
      "hasOptions": false,
      "name": "BDR_HOSTNAME",
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "TAGS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for OS",
      "hasOptions": false,
      "label": "",
      "name": "OS_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for TA",
      "hasOptions": false,
      "label": "",
      "name": "TA_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Hostname for TH",
      "hasOptions": false,
      "label": "",
      "name": "TH_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for ENM",
      "hasOptions": false,
      "label": "",
      "name": "ENM_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Hostname for ECM",
      "hasOptions": false,
      "label": "",
      "name": "ECM_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Hostname for Log Aggregator (LA)",
      "hasOptions": false,
      "name": "LA_HOSTNAME",
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for Machine Learning Application (ML)",
      "hasOptions": false,
      "name": "ML_HOSTNAME",
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for Kafka Bootstrap",
      "hasOptions": false,
      "name": "KF_BO_HOSTNAME",
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Hostname for EIC",
      "hasOptions": false,
      "name": "EIC_HOSTNAME",
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Skips given test scenarios e.g. CANARY_UPGRADE_01, CANARY_UPGRADE_03",
      "hasOptions": false,
      "label": "",
      "name": "SKIP_TESTS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "Run given tests scenarios and nothing else e.g. CANARY_UPGRADE_01, CANARY_UPGRADE_03",
      "hasOptions": false,
      "label": "",
      "name": "RUN_TESTS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "",
      "description": "By default these tests will run e.g., ['main_multiple_iterations.json', 'main_single_iteration.json', 'main_CU2.json'] Override it if needed",
      "hasOptions": false,
      "label": "",
      "name": "CONFIG_FILES",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "evo_docker_engine_gic_IDUN",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "SLAVE_LABEL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "DOCKER_REGISTRY",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "DOCKER_REGISTRY_CREDENTIALS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Service Mesh Load Balancer IP Address",
      "hasOptions": false,
      "label": "",
      "name": "SERVICE_MESH_IP",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "armdocker.rnd.ericsson.se/proj-eric-oss-drop/eric-oss-deployment-manager",
      "description": "Deployment Manager Repository.",
      "hasOptions": false,
      "label": "",
      "name": "DEPLOYMENT_MANAGER_REPO",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "default",
      "description": "Deployment Manager version.",
      "hasOptions": false,
      "label": "",
      "name": "DEPLOYMENT_MANAGER_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Path within the Repo to the location of the site values override file.  The content of this file will be added or will override the content in the FULL_PATH_TO_SITE_VALUES_FILE",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "site-values/idun/ci/template/site-values-latest.yaml",
      "description": "Path within the Repo to the location of the site values file.",
      "hasOptions": false,
      "label": "",
      "name": "FULL_PATH_TO_SITE_VALUES_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "true",
      "description": "When set to true uses the site values generated from the Deployment manager prepare command for the deployment.",
      "hasOptions": true,
      "label": "",
      "name": "USE_DM_PREPARE",
      "options": [
        {
          "value": "false"
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "refs/tags/live-release",
      "description": "The version of the K6 testware to be used.",
      "hasOptions": false,
      "label": "",
      "name": "K6_TESTWARE_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "IP address for Fault Handling SNMP Alarm IP",
      "hasOptions": false,
      "label": "",
      "name": "FH_SNMP_ALARM_IP",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "true",
      "description": "When set to true, enables the DDP auto upload",
      "hasOptions": true,
      "label": "",
      "name": "DDP_AUTO_UPLOAD",
      "options": [
        {
          "value": "false"
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Can be used to specify the environment configuration file which has specific details only for the environment under test",
      "hasOptions": false,
      "label": "",
      "name": "ENV_CONFIG_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "true",
      "description": "When set to true, ENM integration tests will be run",
      "hasOptions": true,
      "label": "",
      "name": "RUN_ENM_INTEGRATION_TEST",
      "options": [
        {
          "value": "false"
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "true",
      "description": "Set to true to use the \"--use-certm\" tag during the deployment",
      "hasOptions": true,
      "label": "",
      "name": "USE_CERTM",
      "options": [
        {
          "value": "false"
        }
      ],
      "pinned": true,
      "required": true
    }
  ],
  "spelEvaluator": "v4",
  "stages": [
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Staging-Report-Register-Child-Flow",
      "master": "oss-fem4s11-eiffel216",
      "name": "Report Center Registration",
      "parameters": {
        "EXEC_ID": "${execution.id}"
      },
      "refId": "Report_Center_Registration",
      "requisiteStageRefIds": [],
      "type": "jenkins",
      "waitForCompletion": true
    },
    {
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-HealthCheck-Using-DM",
      "master": "oss-aispinn-fem5s11-eiffel052",
      "name": "Pre Upgrade Health Check",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "reluser-creds-docker",
        "FUNCTIONAL_USER_SECRET": "reluser-user-creds",
        "KUBECONFIG_FILE": "${parameters['KUBECONFIG_FILE']}",
        "NAMESPACE": "${parameters['NAMESPACE']}"
      },
      "refId": "Pre Upgrade Health Check",
      "requisiteStageRefIds": [],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "job": "helmfile-deploy",
      "master": "oss-aispinn-fem5s11-eiffel052",
      "name": "Upgrade",
      "parameters": {
        "ADC_HOSTNAME": "${parameters['ADC_HOSTNAME']}",
        "APPMGR_HOSTNAME": "${parameters['APPMGR_HOSTNAME']}",
        "ARMDOCKER_USER_SECRET": "reluser-creds-docker",
        "BDR_HOSTNAME":"${parameters['BDR_HOSTNAME']}",
        "CRD_NAMESPACE": "eric-crd-ns",
        "DDP_AUTO_UPLOAD": "${parameters['DDP_AUTO_UPLOAD']}",
        "DEPLOYMENT_MANAGER_DOCKER_IMAGE": "${parameters['DEPLOYMENT_MANAGER_REPO']}:${parameters['DEPLOYMENT_MANAGER_VERSION']}",
        "DEPLOYMENT_TYPE": "upgrade",
        "DOCKER_REGISTRY": "${parameters['DOCKER_REGISTRY']}",
        "DOCKER_REGISTRY_CREDENTIALS": "${parameters['DOCKER_REGISTRY_CREDENTIALS']}",
        "DOWNLOAD_CSARS": "${parameters['USE_REAL_CSAR']}",
        "EIC_HOSTNAME": "${parameters['EIC_HOSTNAME']}",
        "ENV_CONFIG_FILE": "${parameters['ENV_CONFIG_FILE']}",
        "FH_SNMP_ALARM_IP": "${parameters['FH_SNMP_ALARM_IP']}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['FULL_PATH_TO_SITE_VALUES_FILE']}",
        "FUNCTIONAL_USER_SECRET": "reluser-user-creds",
        "GAS_HOSTNAME": "${parameters['GAS_HOSTNAME']}",
        "HELM_TIMEOUT": "3600",
        "IAM_HOSTNAME": "${parameters['IAM_HOSTNAME']}",
        "INGRESS_IP": "${parameters['SERVICE_MESH_IP']}",
        "INT_CHART_NAME": "eric-eiae-helmfile",
        "INT_CHART_REPO": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm",
        "INT_CHART_VERSION": "${parameters['INT_CHART_VERSION']}",
        "KAFKA_BOOTSTRAP_HOSTNAME": "${parameters['KF_BO_HOSTNAME']}",
        "KUBECONFIG_FILE": "${parameters['KUBECONFIG_FILE']}",
        "LA_HOSTNAME": "${parameters['LA_HOSTNAME']}",
        "ML_HOSTNAME": "${parameters['ML_HOSTNAME']}",
        "NAMESPACE": "${parameters['NAMESPACE']}",
        "OS_HOSTNAME": "${parameters['OS_HOSTNAME']}",
        "PATH_TO_CERTIFICATES_FILES": "${parameters['PATH_TO_CERTIFICATES_FILES']}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "SLAVE_LABEL": "${parameters['SLAVE_LABEL']}",
        "TAGS": "${parameters['TAGS']}",
        "TA_HOSTNAME": "${parameters['TA_HOSTNAME']}",
        "TH_HOSTNAME": "${parameters['TH_HOSTNAME']}",
        "USE_CERTM": "${parameters['USE_CERTM']}",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "Upgrade",
      "requisiteStageRefIds": [
        "Pre Upgrade Health Check"
      ],
      "stageTimeoutMs": 18000000,
      "type": "jenkins"
    },
    {
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-HealthCheck-Using-DM",
      "master": "oss-aispinn-fem5s11-eiffel052",
      "name": "Post Upgrade Health Check",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "reluser-creds-docker",
        "FUNCTIONAL_USER_SECRET": "reluser-user-creds",
        "KUBECONFIG_FILE": "${parameters['KUBECONFIG_FILE']}",
        "NAMESPACE": "${parameters['NAMESPACE']}"
      },
      "refId": "Post Upgrade Health Check",
      "requisiteStageRefIds": [
        "Upgrade"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "application": "banba",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Run k6 Tests & Assert",
      "pipeline": "e908f29c-e1ac-4df5-a8e3-0cae7a426efe",
      "pipelineParameters": {
        "ADC_HOSTNAME": "${parameters['ADC_HOSTNAME']}",
        "APP_MGR_HOSTNAME": "${parameters['APPMGR_HOSTNAME']}",
        "BDR_HOSTNAME": "${parameters['BDR_HOSTNAME']}",
        "CONFIG_FILES": "${parameters['CONFIG_FILES']}",
        "DEPLOYMENT_NAME": "${parameters['DEPLOYMENT_NAME']}",
        "ECM_HOSTNAME": "${parameters['ECM_HOSTNAME']}",
        "EIC_VERSION": "${parameters['INT_CHART_VERSION']}",
        "ENM_HOSTNAME": "${parameters['ENM_HOSTNAME']}",
        "GAS_HOSTNAME": "${parameters['GAS_HOSTNAME']}",
        "GERRIT_REFSPEC": "${parameters['K6_TESTWARE_VERSION']}",
        "IAM_HOSTNAME": "${parameters['IAM_HOSTNAME']}",
        "JENKINS_AGENT_LABEL": "fem5dockerslave5",
        "KAFKA_HOSTNAME": "${parameters['KF_BO_HOSTNAME']}",
        "KUBE_CONFIG": "${parameters['KUBECONFIG_FILE']}",
        "NAMESPACE": "${parameters['NAMESPACE']}",
        "RUN_ENM_INTEGRATION_TEST": "${parameters['RUN_ENM_INTEGRATION_TEST']}",
        "RUN_TESTS": "${parameters['RUN_TESTS']}",
        "SKIP_TESTS": "${parameters['SKIP_TESTS']}",
        "TH_HOSTNAME": "${parameters['TH_HOSTNAME']}"
      },
      "refId": "Run k6 Tests & Assert",
      "requisiteStageRefIds": [
        "Post Upgrade Health Check"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Post Flow Checks",
      "preconditions": [
        {
          "context": {
            "expression": "\"${#stage('Upgrade')['status']}\" == \"SUCCEEDED\" or \"${#stage('Upgrade')['status']}\" == \"SKIPPED\"",
            "failureMessage": "Upgrade failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Run k6 Tests & Assert')['status']}\" == \"SUCCEEDED\" or \"${#stage('Run k6 Tests & Assert')['status']}\" == \"SKIPPED\" or \"${#stage('Run k6 Tests & Assert')['status']}\" == \"FAILED_CONTINUE\"",
            "failureMessage": "Failed to start K6 tests"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Pre Upgrade Health Check')['status']}\" == \"SUCCEEDED\" or \"${#stage('Pre Upgrade Health Check')['status']}\" == \"SKIPPED\" or \"${#stage('Pre Upgrade Health Check')['status']}\" == \"FAILED_CONTINUE\"",
            "failureMessage": "Pre Upgrade Health Check failed"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Post Upgrade Health Check')['status']}\" == \"SUCCEEDED\" or \"${#stage('Post Upgrade Health Check')['status']}\" == \"SKIPPED\" or \"${#stage('Post Upgrade Health Check')['status']}\" == \"FAILED_CONTINUE\"",
            "failureMessage": "Post Upgrade Health Check failed"
          },
          "failPipeline": true,
          "type": "expression"
        }
      ],
      "refId": "Post Flow Checks",
      "requisiteStageRefIds": [
        "Run k6 Tests & Assert"
      ],
      "type": "checkPreconditions"
    },
    {
      "continuePipeline": false,
      "failPipeline": true,
      "job": "RPT-RC_Quarantine-Environment",
      "master": "oss-fem5s11-eiffel216",
      "name": "Quarantine Environment",
      "parameters": {
        "ENV_NAME": "${parameters['DEPLOYMENT_NAME']}"
      },
      "refId": "Quarantine Environment",
      "requisiteStageRefIds": [
        "Post Flow Checks"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Post Flow Checks')['status']}\" != \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "isNew": true,
      "job": "CICD-UTILS-DDP-Upload",
      "master": "oss-aispinn-fem5s11-eiffel052",
      "name": "Push Data to DDP",
      "parameters": {
        "DDC_POD_NAME": "eric-oss-ddc",
        "KUBE_CONFIG": "${parameters['KUBECONFIG_FILE']}",
        "NAMESPACE": "${parameters['NAMESPACE']}",
        "SLAVE": "evo_docker_engine_gic_IDUN",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "refId": "Push Data to DDP",
      "requisiteStageRefIds": [
        "Post Flow Checks"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Post Flow Checks')['status']}\" != \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "name": "End Flow",
      "preconditions": [
        {
          "context": {
            "stageName": "Post Flow Checks",
            "stageStatus": "SUCCEEDED"
          },
          "failPipeline": true,
          "type": "stageStatus"
        }
      ],
      "refId": "End Flow",
      "requisiteStageRefIds": [
        "Quarantine Environment",
        "Push Data to DDP"
      ],
      "type": "checkPreconditions"
    }
  ],
  "triggers": []
}