{
  "appConfig": {},
  "application": "SPINNAKER_APPLICATION_NAME",
  "disabled": false,
  "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten. Template name: deploy_using_helmfile_product_staging.json in repo https://gerrit.ericsson.se/#/admin/projects/OSS/com.ericsson.oss.cicd/oss-common-cicd-pipeline-resources",
  "name": "SPINNAKER_PIPELINE_NAME",
  "keepWaitingPipelines": false,
  "limitConcurrent": false,
  "locked": {
    "allowUnlockUi": true,
    "description": "",
    "ui": true
  },
  "parameterConfig": [
    {
      "default": "eric-oss-common-base",
      "description": "Name of the integration chart that holds the new microservice",
      "hasOptions": false,
      "label": "INT_CHART_NAME",
      "name": "INT_CHART_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "0.0.0",
      "description": "Version of the Integration Chart that holds the new microservice",
      "hasOptions": false,
      "label": "INT_CHART_VERSION",
      "name": "INT_CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm",
      "description": "Repo of the Integration Chart that holds the new microservice",
      "hasOptions": false,
      "label": "INT_CHART_REPO",
      "name": "INT_CHART_REPO",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "install",
      "description": "Used to set the deployment Type, option install or upgrade",
      "hasOptions": false,
      "label": "Deployment Type",
      "name": "DEPLOYMENT_TYPE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "so",
      "description": "Site values tags which has to be set to true during deployment",
      "hasOptions": false,
      "label": "",
      "name": "TAGS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "site-values/ci/site-values-latest.yaml",
      "description": "The Path where all the necessary site values are located for the install/upgrade",
      "hasOptions": false,
      "label": "PATH_TO_SITE_VALUES_FILE",
      "name": "PATH_TO_SITE_VALUES_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "NONE",
      "description": "Path within the Repo to the location of the site values override file. Content of this file will override the content for the site values set in the FULL_PATH_TO_SITE_VALUES_FILE parameter.",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "ossapps100-arm-docker-auth-config",
      "description": "Jenkins credentials ID for Docker login configuration file",
      "hasOptions": false,
      "label": "ARMDOCKER_USER_SECRET",
      "name": "ARMDOCKER_USER_SECRET",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "evo_docker_engine",
      "description": "Label to choose which Jenkins slave to execute Jenkinsfiles against",
      "hasOptions": false,
      "label": "",
      "name": "SLAVE_LABEL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "Functional user for logging into armdocker",
      "hasOptions": false,
      "label": "FUNCTIONAL_USER_SECRET",
      "name": "FUNCTIONAL_USER_SECRET",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "Timeout for helmfile deploy",
      "hasOptions": false,
      "label": "HELM_TIMEOUT",
      "name": "HELM_TIMEOUT",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "GAS Hostname",
      "hasOptions": false,
      "label": "GAS_HOSTNAME",
      "name": "GAS_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "IAM Hostname",
      "hasOptions": false,
      "label": "IAM_HOSTNAME",
      "name": "IAM_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "",
      "description": "KAFKA_BOOTSTRAP Hostname",
      "hasOptions": false,
      "label": "KAFKA_BOOTSTRAP_HOSTNAME",
      "name": "KAFKA_BOOTSTRAP_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "PF HOSTNAME",
      "hasOptions": false,
      "label": "PF_HOSTNAME",
      "name": "PF_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "SO Hostname Entry",
      "hasOptions": false,
      "label": "SO_HOSTNAME",
      "name": "SO_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "UDS Hostname Entry",
      "hasOptions": false,
      "label": "UDS_HOSTNAME",
      "name": "UDS_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "ADC hostname Entry",
      "hasOptions": false,
      "label": "ADC_HOSTNAME",
      "name": "ADC_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "APPMGR hostname Entry",
      "hasOptions": false,
      "label": "APPMGR_HOSTNAME",
      "name": "APPMGR_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "BDR_HOSTNAME Entry",
      "hasOptions": false,
      "label": "BDR_HOSTNAME",
      "name": "BDR_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "ML_HOSTNAME Entry",
      "hasOptions": false,
      "label": "ML_HOSTNAME",
      "name": "ML_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "OS_HOSTNAME Entry",
      "hasOptions": false,
      "label": "OS_HOSTNAME",
      "name": "OS_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "EIC_HOSTNAME Entry",
      "hasOptions": false,
      "label": "EIC_HOSTNAME",
      "name": "EIC_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "TH_HOSTNAME Entry",
      "hasOptions": false,
      "label": "TH_HOSTNAME",
      "name": "TH_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "LA_HOSTNAME Entry",
      "hasOptions": false,
      "label": "LA_HOSTNAME",
      "name": "LA_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "EVNFM Hostname Entry",
      "hasOptions": false,
      "label": "VNFM_HOSTNAME",
      "name": "VNFM_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "EVNFM Registry Hostname Entry",
      "hasOptions": false,
      "label": "REGISTRY_HOSTNAME",
      "name": "REGISTRY_HOSTNAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "",
      "description": "Kubernetes Config File name that is stored in Jenkins",
      "hasOptions": false,
      "label": "KUBE_CONFIG",
      "name": "KUBE_CONFIG",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "",
      "description": "Path to the Certificates with the repo",
      "hasOptions": false,
      "label": "PATH_TO_CERTIFICATES_FILES",
      "name": "PATH_TO_CERTIFICATES_FILES",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "",
      "description": "Kubernetes Namespace to deploy the system into",
      "hasOptions": false,
      "label": "NAMESPACE",
      "name": "NAMESPACE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "armdocker.rnd.ericsson.se",
      "description": "Registry that should be used for the deployment",
      "hasOptions": false,
      "label": "DOCKER_REGISTRY",
      "name": "DOCKER_REGISTRY",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "None",
      "description": "Docker Registry Credentials, Only should be populated if using the local registry",
      "hasOptions": false,
      "label": "DOCKER_REGISTRY_CREDENTIALS",
      "name": "DOCKER_REGISTRY_CREDENTIALS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "false",
      "description": "Used to download the official released CSAR according to the helmfile version, if set to true the DOCKER_REGISTRY and DOCKER_REGISTRY_CREDENTIALS should be filled",
      "hasOptions": false,
      "label": "DOWNLOAD_CSARS",
      "name": "DOWNLOAD_CSARS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "None",
      "description": "",
      "hasOptions": false,
      "label": "WHAT_CHANGED",
      "name": "WHAT_CHANGED",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "ELASTIC_INGRESS_HOST",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "PROMETHEUS_INGRESS_HOST",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "default",
      "description": "INGRESS IP to use for the deployment",
      "hasOptions": false,
      "label": "INGRESS_IP",
      "name": "INGRESS_IP",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "DEPLOY_ALL_CRDS",
      "options": [
        {
          "value": "true"
        },
        {
          "value": "false"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "Set to true to use the Deployment Manager function \"prepare\" to generate the site values file",
      "hasOptions": false,
      "label": "",
      "name": "USE_DM_PREPARE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "false",
      "description": "Skip CRD Deploy",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_CRD_DEPLOY",
      "options": [
        {
          "value": "true"
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "true",
      "description": "select true to collect deployment logs when a failure is seen, false to turn off log collection",
      "hasOptions": false,
      "label": "COLLECT_LOGS",
      "name": "COLLECT_LOGS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "default",
      "description": "IP for the SNMP Alarm Provider",
      "hasOptions": false,
      "label": "FH_SNMP_ALARM_IP",
      "name": "FH_SNMP_ALARM_IP",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "false",
      "description": "specify if DDP Auto upload should run",
      "hasOptions": false,
      "label": "DDP_AUTO_UPLOAD",
      "name": "DDP_AUTO_UPLOAD",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "default",
      "description": "Environment configuration file stored in repo",
      "hasOptions": false,
      "label": "ENV_CONFIG_FILE",
      "name": "ENV_CONFIG_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "false",
      "description": "set to true to use the \"--use certm\" tag during the deployment",
      "hasOptions": false,
      "label": "USE_CERTM",
      "name": "USE_CERTM",
      "options": [
        {
          "value": "true"
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "FULL",
      "description": "Set to FULL or PARTIAL",
      "hasOptions": false,
      "label": "CLEANUP_TYPE",
      "name": "CLEANUP_TYPE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    }
  ],
  "schema": "1",
  "spelEvaluator": "v4",
  "stages": [
    {
      "completeOtherBranchesThenFail": true,
      "continuePipeline": false,
      "failPipeline": false,
      "job": "Purge-Release-in-Namespace",
      "master": "oss-fem7s11-eiffel216",
      "name": "Clean Down Deployment",
      "parameters": {
      "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
      "CLEANUP_TYPE": "${parameters[\"CLEANUP_TYPE\"]}",
      "FUNCTIONAL_USER_SECRET": "${parameters['FUNCTIONAL_USER_SECRET']}",
      "KUBECONFIG_FILE": "${parameters[\"KUBE_CONFIG\"]}",
      "NAMESPACE": "${parameters[\"NAMESPACE\"]}",
      "SLAVE_LABEL": "${parameters[\"SLAVE_LABEL\"]}"
      },
      "refId": "Clean Down Deployment",
      "requisiteStageRefIds": [],
      "stageEnabled": {
      "expression": "'${parameters['DEPLOYMENT_TYPE']}' == 'install'",
      "type": "expression"
      },
      "stageTimeoutMs": 1200000,
      "type": "jenkins"
    },
    {
      "application": "common-e2e-cicd",
      "failPipeline": true,
      "name": "Pre-Deploy",
      "pipeline": "88012023-7839-4eca-92f4-f87715ed77ad",
      "pipelineParameters": {
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "CRD_NAMESPACE": "eric-crd-ns",
        "DEPLOYMENT_TYPE": "${parameters['DEPLOYMENT_TYPE']}",
        "EXECUTE_AM_PREDEPLOYMENT_STEP": "yes",
        "FUNCTIONAL_USER_SECRET": "${parameters['FUNCTIONAL_USER_SECRET']}",
        "KUBECONFIG_FILE": "${parameters[\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${parameters[\"NAMESPACE\"]}",
        "SLAVE_LABEL": "${parameters['SLAVE_LABEL']}",
        "TESTWARE_API_URL": "http://api.prod-staging-report.ews.gic.ericsson.se/api",
        "TESTWARE_DATABASE_URL": "postgresql://testware_user:testware@kroto018.rnd.gic.ericsson.se:30005/staging",
        "TESTWARE_K6_TOOL_GUI_URL": "http://gui.prod-staging-report.ews.gic.ericsson.se/staging-reports"
      },
      "refId": "Pre-Deploy",
      "requisiteStageRefIds": [
      "Clean Down Deployment"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Clean Down Deployment')['status']}\" == \"SUCCEEDED\" or \"${#stage('Clean Down Deployment')['status']}\" == \"SKIPPED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failOnFailedExpressions": false,
      "failPipeline": true,
      "job": "helmfile-deploy",
      "master": "oss-fem7s11-eiffel216",
      "name": "Deployment",
      "parameters": {
        "ADC_HOSTNAME": "${parameters['ADC_HOSTNAME']}",
        "APPMGR_HOSTNAME": "${parameters['APPMGR_HOSTNAME']}",
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "BDR_HOSTNAME": "${parameters['BDR_HOSTNAME']}",
        "COLLECT_LOGS": "${parameters['COLLECT_LOGS']}",
        "CRD_NAMESPACE": "eric-crd-ns",
        "DDP_AUTO_UPLOAD": "${parameters['DDP_AUTO_UPLOAD']}",
        "DEPLOYMENT_TYPE": "${parameters['DEPLOYMENT_TYPE']}",
        "DEPLOY_ALL_CRDS": "${parameters['DEPLOY_ALL_CRDS']}",
        "DOCKER_REGISTRY": "${parameters['DOCKER_REGISTRY']}",
        "DOCKER_REGISTRY_CREDENTIALS": "${parameters['DOCKER_REGISTRY_CREDENTIALS']}",
        "DOWNLOAD_CSARS": "${parameters['DOWNLOAD_CSARS']}",
        "EIC_HOSTNAME": "${parameters['EIC_HOSTNAME']}",
        "ENV_CONFIG_FILE": "${parameters[\"ENV_CONFIG_FILE\"]}",
        "FH_SNMP_ALARM_IP": "${parameters['FH_SNMP_ALARM_IP']}",
        "FULL_PATH_TO_SITE_VALUES_FILE": "${parameters['PATH_TO_SITE_VALUES_FILE']}",
        "FUNCTIONAL_USER_SECRET": "${parameters['FUNCTIONAL_USER_SECRET']}",
        "GAS_HOSTNAME": "${parameters['GAS_HOSTNAME']}",
        "HELM_TIMEOUT": "${parameters['HELM_TIMEOUT']}",
        "IAM_HOSTNAME": "${parameters['IAM_HOSTNAME']}",
        "INGRESS_IP": "${parameters['INGRESS_IP']}",
        "INT_CHART_NAME": "${parameters['INT_CHART_NAME']}",
        "INT_CHART_REPO": "${parameters['INT_CHART_REPO']}",
        "INT_CHART_VERSION": "${parameters['INT_CHART_VERSION']}",
        "KUBECONFIG_FILE": "${parameters[\"KUBE_CONFIG\"]}",
        "KAFKA_BOOTSTRAP_HOSTNAME": "${parameters['KAFKA_BOOTSTRAP_HOSTNAME']}",
        "LA_HOSTNAME": "${parameters['LA_HOSTNAME']}",
        "ML_HOSTNAME": "${parameters['ML_HOSTNAME']}",
        "NAMESPACE": "${parameters[\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${parameters['OS_HOSTNAME']}",
        "PATH_TO_CERTIFICATES_FILES": "${parameters[\"PATH_TO_CERTIFICATES_FILES\"]}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${parameters[\"PATH_TO_SITE_VALUES_OVERRIDE_FILE\"]}",
        "PF_HOSTNAME": "${parameters['PF_HOSTNAME']}",
        "SLAVE_LABEL": "${parameters['SLAVE_LABEL']}",
        "SO_HOSTNAME": "${parameters['SO_HOSTNAME']}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}",
        "TAGS": "${parameters['TAGS']}",
        "TH_HOSTNAME": "${parameters['TH_HOSTNAME']}",
        "UDS_HOSTNAME": "${parameters['UDS_HOSTNAME']}",
        "USE_CERTM": "${parameters['USE_CERTM']}",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}",
        "USE_SKIP_UPGRADE_FOR_UNCHANGED_RELEASES": "true",
        "VNFM_HOSTNAME": "${parameters['VNFM_HOSTNAME']}",
        "VNFM_REGISTRY_HOSTNAME": "${parameters['REGISTRY_HOSTNAME']}",
        "WHAT_CHANGED": "${parameters['WHAT_CHANGED']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "Deployment",
      "requisiteStageRefIds": [
        "Pre-Deploy"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Pre-Deploy')['status']}\" == \"SUCCEEDED\" or \"${#stage('Pre-Deploy')['status']}\" == \"SKIPPED\"",
        "type": "expression"
      },
      "type": "jenkins"
    }
  ],
  "triggers": []
}