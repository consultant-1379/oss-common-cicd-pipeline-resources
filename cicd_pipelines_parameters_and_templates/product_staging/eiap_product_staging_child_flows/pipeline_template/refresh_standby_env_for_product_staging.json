{
  "appConfig": {},
  "application": "SPINNAKER_APPLICATION_NAME",
  "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten. Template name: refresh_standby_env_for_product_staging.json in repo https://gerrit.ericsson.se/#/admin/projects/OSS/com.ericsson.oss.cicd/oss-common-cicd-pipeline-resources",
  "disabled": false,
  "name": "SPINNAKER_PIPELINE_NAME",
  "keepWaitingPipelines": true,
  "limitConcurrent": false,
  "locked": {
    "allowUnlockUi": true,
    "description": "This pipeline is maintained by spinnaker as a code, any changes made through the ui will be overwritten",
    "ui": true
  },
  "notifications": [
    {
      "address": "NOTIFICATION_ADDRESS",
      "level": "pipeline",
      "message": {
        "pipeline.failed": {
          "text": "The refresh standby env for product staging pipeline has failed."
        }
      },
      "type": "email",
      "when": [
        "pipeline.failed"
      ]
    }
  ],
  "parameterConfig": [
    {
      "default": "",
      "description": "Name of standby test environment to be refreshed",
      "hasOptions": false,
      "label": "",
      "name": "ENV_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "Product_Staging_Child_Flow",
      "description": "RCF Tag is used to identify the environment by Report Center Registration Stage for Child flows",
      "hasOptions": false,
      "label": "",
      "name": "RCF_TAG",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "psouser-user-creds",
      "description": "Functional user for logging into armdocker",
      "hasOptions": false,
      "label": "",
      "name": "FUNCTIONAL_USER_SECRET",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "ossapps100-arm-docker-auth-config",
      "description": "Jenkins credentials ID for Docker login configuration file",
      "hasOptions": false,
      "label": "ARMDOCKER_USER_SECRET",
      "name": "ARMDOCKER_USER_SECRET",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "eric-eiae-helmfile",
      "description": "Name of the integration chart which will be used for the Initial install",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_NAME",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-drop-helm-local",
      "description": "Repo of the Integration Chart which will be used for the Initial Install",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_REPO",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "0.0.0",
      "description": "Version of the Integration Chart which will be used for the Initial Install",
      "hasOptions": false,
      "label": "",
      "name": "INT_CHART_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "evo_docker_engine_gic_IDUN_PSO",
      "description": "Label to choose which Jenkins slave to execute Jenkinsfiles against",
      "hasOptions": false,
      "label": "",
      "name": "SLAVE_LABEL",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "3600",
      "description": "Timeout for helmfile deploy",
      "hasOptions": false,
      "label": "",
      "name": "HELM_TIMEOUT",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "site-values/idun/ci/template/site-values-latest.yaml",
      "description": "The Path where all the necessary site values are located for the install/upgrade",
      "hasOptions": false,
      "label": "",
      "name": "PATH_TO_SITE_VALUES_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "adc th dmm eas appmgr ch os pmh ml sef tieh",
      "description": "Applications that should be switched on during deployment",
      "hasOptions": false,
      "label": "",
      "name": "TAGS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "true",
      "description": "Determines whether latest Helmfile version is used in Upgrade/Install. If set to \"false\", version used will be that specified as value for INT_CHART_VERSION",
      "hasOptions": false,
      "label": "",
      "name": "USE_LATEST_HELMFILE_VERSION",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "false",
      "description": "",
      "hasOptions": false,
      "label": "",
      "name": "SKIP_UPGRADE",
      "options": [
        {
          "value": "false"
        },
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "site-values/idun/ci/override/override-sitevalues-ps.yaml",
      "description": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "hasOptions": false,
      "label": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "name": "PATH_TO_SITE_VALUES_OVERRIDE_FILE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": false
    },
    {
      "default": "true",
      "description": "When set to true uses the site values generated from the Deployment manager prepare command for the deployment.",
      "hasOptions": false,
      "label": "",
      "name": "USE_DM_PREPARE",
      "options": [],
      "pinned": false,
      "required": false
    },
    {
      "default": "false",
      "description": "Skip CRD Deploy",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_CRD_DEPLOY",
      "options": [
        {
          "value": "true"
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "Standby",
      "description": "Status to set for the environment",
      "hasOptions": false,
      "label": "",
      "name": "ENVIRONMENT_STATUS",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "FULL",
      "description": "Set to FULL or PARTIAL",
      "hasOptions": false,
      "label": "CLEANUP_TYPE",
      "name": "CLEANUP_TYPE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": true
    },
    {
      "default": "true",
      "description": "Set the pipeline to skip install on a UG failure. true or false",
      "hasOptions": false,
      "label": "INSTALL_ON_UPGRADE_FAILURE",
      "name": "INSTALL_ON_UPGRADE_FAILURE",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": false,
      "required": false
    },
    {
      "default": "false",
      "description": "Set to true if you want the DDP Upload job to be skipped in your pipeline execution",
      "hasOptions": true,
      "label": "",
      "name": "SKIP_DDP_UPLOAD",
      "options": [
        {
          "value": "true"
        }
      ],
      "pinned": false,
      "required": true
    }
  ],
  "spelEvaluator": "v4",
  "stages": [
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Staging-Report-Register-Child-Flow",
      "master": "oss-fem4s11-eiffel216",
      "name": "Report Center Registration",
      "parameters": {
        "EXEC_ID": "${execution.id}"
      },
      "refId": "Report_Center_Registration",
      "requisiteStageRefIds": [],
      "type": "jenkins",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "RPT-RC_Update-PipelineStage",
      "master": "oss-fem5s11-eiffel216",
      "name": "Update Pipeline Stage with Spinnaker execution URL",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "FLOW_URL": "https://spinnaker.rnd.gic.ericsson.se/#/applications/${execution['application']}/executions/details/${execution['id']}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "refId": "Update Pipeline Stage with Spinnaker execution URL",
      "requisiteStageRefIds": [
        "Update Env Status to Refreshing"
      ],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": false,
      "failPipeline": true,
      "job": "RPT-RC_Update-Test-Environment-Status",
      "master": "oss-fem5s11-eiffel216",
      "name": "Update Env Status to Refreshing",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}",
        "status": "Refreshing"
      },
      "refId": "Update Env Status to Refreshing",
      "requisiteStageRefIds": [
      ],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Gather-Env-Details",
      "master": "oss-fem7s11-eiffel216",
      "name": "Gather Env Details",
      "parameters": {
        "ENV_DETAILS_DIR": "eo-integration-ci/honeypots/pooling/environments",
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "Gather Env Details",
      "requisiteStageRefIds": [
      ],
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "Get-Latest-ChartOrHelmfile",
      "master": "oss-fem7s11-eiffel216",
      "name": "Get Latest Helmfile Version",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "INT_CHART_NAME": "${parameters[\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${parameters[\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "${parameters[\"INT_CHART_VERSION\"]}",
        "SLAVE_LABEL": "${parameters[\"SLAVE_LABEL\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "propertyFile": "artifact.properties",
      "refId": "Get Latest Helmfile Version",
      "requisiteStageRefIds": [
      ],
      "stageEnabled": {
        "expression": "\"${parameters['USE_LATEST_HELMFILE_VERSION']}\" == \"true\" and \"${parameters['SKIP_UPGRADE']}\" == \"false\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": false,
      "failPipeline": false,
      "name": "Set Helmfile Version for Upgrade",
      "refId": "Set Helmfile Version for Upgrade",
      "requisiteStageRefIds": [
        "Gather Env Details",
        "Get Latest Helmfile Version",
        "Update Pipeline Stage with Spinnaker execution URL"
      ],
      "stageEnabled": {
        "expression": "\"${parameters['SKIP_UPGRADE']}\" == \"false\" and (\"${#stage('Get Latest Helmfile Version')['status']}\" == \"SUCCEEDED\" or \"${#stage('Get Latest Helmfile Version')['status']}\" == \"SKIPPED\") and (\"${#stage('Update Env Status to Refreshing')['status']}\" == \"SUCCEEDED\") and (\"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\") and (\"${#stage('Update Pipeline Stage with Spinnaker execution URL')['status']}\" == \"SUCCEEDED\" or \"${#stage('Update Pipeline Stage with Spinnaker execution URL')['status']}\" == \"SKIPPED\")",
        "type": "expression"
      },
      "type": "evaluateVariables",
      "variables": [
        {
          "key": "INT_CHART_VERSION",
          "value": "${(parameters[\"USE_LATEST_HELMFILE_VERSION\"] == \"true\") ? #stage(\"Get Latest Helmfile Version\")[\"context\"][\"INT_CHART_VERSION\"] : parameters[\"INT_CHART_VERSION\"]}"
        }
      ]
    },
    {
      "application": "product-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Upgrade using Helmfile",
      "pipeline": "927ada85-966c-4dbc-a942-f5e1cbb44a15",
      "pipelineParameters": {
        "ADC_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_ADC_HOSTNAME\"]}",
        "APPMGR_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_APPMGR_HOSTNAME\"]}",
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "BDR_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_BDR_HOSTNAME\"]}",
        "DDP_AUTO_UPLOAD": "true",
        "DEPLOYMENT_TYPE": "upgrade",
        "EIC_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_EIC_HOSTNAME\"]}",
        "ENV_CONFIG_FILE": "eo-integration-ci/honeypots/pooling/environments/${parameters[\"ENV_NAME\"]}.conf",
        "FH_SNMP_ALARM_IP": "${#stage(\"Gather Env Details\")[\"context\"][\"fhSnmpAlarmIp\"]}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "GAS_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_GAS_HOSTNAME\"]}",
        "HELM_TIMEOUT": "${parameters[\"HELM_TIMEOUT\"]}",
        "IAM_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"IAM_HOSTNAME\"]}",
        "INGRESS_IP": "${#stage(\"Gather Env Details\")[\"context\"][\"SM_IP\"]}",
        "INT_CHART_NAME": "${parameters[\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${parameters[\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "${INT_CHART_VERSION}",
        "KAFKA_BOOTSTRAP_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_KAFKA_BOOTSTRAP_HOSTNAME\"]}",
        "KUBE_CONFIG": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "LA_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_LA_HOSTNAME\"]}",
        "ML_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_ML_HOSTNAME\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_OS_HOSTNAME\"]}",
        "PATH_TO_CERTIFICATES_FILES": "eo-integration-ci/${#stage(\"Gather Env Details\")[\"context\"][\"PATH_TO_CERTIFICATES_FILES\"]}",
        "PATH_TO_SITE_VALUES_FILE": "${parameters[\"PATH_TO_SITE_VALUES_FILE\"]}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${trigger['parameters']['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "SKIP_CRD_DEPLOY": "${parameters['SKIP_CRD_DEPLOY']}",
        "SLAVE_LABEL": "${parameters[\"SLAVE_LABEL\"]}",
        "TAGS": "${parameters[\"TAGS\"]}",
        "TH_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_TH_HOSTNAME\"]}",
        "USE_CERTM": "true",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "refId": "Upgrade using Helmfile",
      "requisiteStageRefIds": [
        "Set Helmfile Version for Upgrade"
      ],
      "stageEnabled": {
        "expression": "\"${parameters['SKIP_UPGRADE']}\" == \"false\" and \"${#stage('Set Helmfile Version for Upgrade')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "BASE-VERS_Retrieve_Baseline_Version",
      "master": "oss-fem5s11-eiffel216",
      "name": "Retrieve II Baseline",
      "parameters": {
        "KEY_TO_RETRIEVE_BASELINE_VERSION_OF": "II_BASELINE_INT_CHART_VERSION",
        "VERSIONS_FILENAME": "versions"
      },
      "propertyFile": "artifact.properties",
      "refId": "Retrieve II Baseline",
      "requisiteStageRefIds": [
        "Upgrade using Helmfile"
      ],
      "stageEnabled": {
        "expression": "((\"${parameters['USE_LATEST_HELMFILE_VERSION']}\" == \"true\" and \"${#stage('Upgrade using Helmfile')['status']}\" != \"SUCCEEDED\") and \"${parameters['INSTALL_ON_UPGRADE_FAILURE']}\" == \"true\" or (\"${parameters['USE_LATEST_HELMFILE_VERSION']}\" == \"false\" and \"${parameters['SKIP_UPGRADE']}\" == \"false\" and \"${#stage('Upgrade using Helmfile')['status']}\" != \"SUCCEEDED\")) and (\"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\") and (\"${#stage('Update Env Status to Refreshing')['status']}\" == \"SUCCEEDED\") and \"${parameters['INSTALL_ON_UPGRADE_FAILURE']}\" == \"true\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failOnFailedExpressions": true,
      "failPipeline": false,
      "name": "Set Helmfile Version for Install",
      "refId": "Set Helmfile Version for Install",
      "requisiteStageRefIds": [
        "Retrieve II Baseline"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" != \"SUCCEEDED\" and \"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\" and (\"${#stage('Update Env Status to Refreshing')['status']}\" == \"SUCCEEDED\") and \"${parameters['INSTALL_ON_UPGRADE_FAILURE']}\" == \"true\"",
        "type": "expression"
      },
      "type": "evaluateVariables",
      "variables": [
        {
          "key": "INT_CHART_VERSION",
          "value": "${(parameters[\"USE_LATEST_HELMFILE_VERSION\"] == \"true\") || ((parameters[\"USE_LATEST_HELMFILE_VERSION\"] == \"false\") && (parameters[\"SKIP_UPGRADE\"] == \"false\")) ? #stage(\"Retrieve II Baseline\")[\"context\"][\"II_BASELINE_INT_CHART_VERSION\"] : parameters[\"INT_CHART_VERSION\"]}"
        }
      ]
    },
    {
      "application": "product-e2e-cicd",
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Install using Helmfile",
      "pipeline": "927ada85-966c-4dbc-a942-f5e1cbb44a15",
      "pipelineParameters": {
        "ADC_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_ADC_HOSTNAME\"]}",
        "APPMGR_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_APPMGR_HOSTNAME\"]}",
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "BDR_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_BDR_HOSTNAME\"]}",
        "CLEANUP_TYPE": "${parameters[\"CLEANUP_TYPE\"]}",
        "DDP_AUTO_UPLOAD": "true",
        "DEPLOYMENT_TYPE": "install",
        "EIC_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_EIC_HOSTNAME\"]}",
        "ENV_CONFIG_FILE": "eo-integration-ci/honeypots/pooling/environments/${parameters[\"ENV_NAME\"]}.conf",
        "FH_SNMP_ALARM_IP": "${#stage(\"Gather Env Details\")[\"context\"][\"fhSnmpAlarmIp\"]}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "GAS_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_GAS_HOSTNAME\"]}",
        "HELM_TIMEOUT": "${parameters[\"HELM_TIMEOUT\"]}",
        "IAM_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"IAM_HOSTNAME\"]}",
        "INGRESS_IP": "${#stage(\"Gather Env Details\")[\"context\"][\"SM_IP\"]}",
        "INT_CHART_NAME": "${parameters[\"INT_CHART_NAME\"]}",
        "INT_CHART_REPO": "${parameters[\"INT_CHART_REPO\"]}",
        "INT_CHART_VERSION": "2.3641.0",
        "KAFKA_BOOTSTRAP_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_KAFKA_BOOTSTRAP_HOSTNAME\"]}",
        "KUBE_CONFIG": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "LA_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_LA_HOSTNAME\"]}",
        "ML_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_ML_HOSTNAME\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "OS_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_OS_HOSTNAME\"]}",
        "PATH_TO_CERTIFICATES_FILES": "eo-integration-ci/${#stage(\"Gather Env Details\")[\"context\"][\"PATH_TO_CERTIFICATES_FILES\"]}",
        "PATH_TO_SITE_VALUES_FILE": "${parameters[\"PATH_TO_SITE_VALUES_FILE\"]}",
        "PATH_TO_SITE_VALUES_OVERRIDE_FILE": "${trigger['parameters']['PATH_TO_SITE_VALUES_OVERRIDE_FILE']}",
        "SKIP_CRD_DEPLOY": "${parameters['SKIP_CRD_DEPLOY']}",
        "SLAVE_LABEL": "${parameters[\"SLAVE_LABEL\"]}",
        "TAGS": "${parameters[\"TAGS\"]}",
        "TH_HOSTNAME": "${#stage(\"Gather Env Details\")[\"context\"][\"EO_TH_HOSTNAME\"]}",
        "USE_CERTM": "true",
        "USE_DM_PREPARE": "${parameters['USE_DM_PREPARE']}"
      },
      "refId": "Install using Helmfile",
      "requisiteStageRefIds": [
        "Set Helmfile Version for Install",
        "Push Data to DDP"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" != \"SUCCEEDED\" and \"${#stage('Set Helmfile Version for Install')['status']}\" == \"SUCCEEDED\" and (\"${#stage('Push Data to DDP')['status']}\" == \"SUCCEEDED\" or \"${#stage('Push Data to DDP')['status']}\" == \"SKIPPED\")",
        "type": "expression"
      },
      "type": "pipeline",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "RPT-RC_Update-Environment-Details",
      "master": "oss-fem5s11-eiffel216",
      "name": "Update Env Version Property in RPT",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}",
        "version": "${INT_CHART_VERSION}"
      },
      "refId": "Update Env Version Property in RPT",
      "requisiteStageRefIds": [
        "Install using Helmfile"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "name": "Post Flow Checks",
      "preconditions": [
        {
          "context": {
            "expression": "\"${#stage('Update Env Status to Refreshing')['status']}\" == \"SUCCEEDED\" or \"${#stage('Update Env Status to Refreshing')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "(\"${parameters['SKIP_UPGRADE']}\" == \"false\" and (\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Upgrade using Helmfile')['status']}\" == \"SKIPPED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" and \"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\")) or (\"${parameters['SKIP_UPGRADE']}\" == \"true\" and (\"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\" or \"${#stage('Install using Helmfile')['status']}\" == \"SKIPPED\"))"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Update Env Version Property in RPT')['status']}\" == \"SUCCEEDED\" or \"${#stage('Update Env Version Property in RPT')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Retrieve II Baseline')['status']}\" == \"SUCCEEDED\" or \"${#stage('Retrieve II Baseline')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Set Helmfile Version for Install')['status']}\" == \"SUCCEEDED\" or \"${#stage('Set Helmfile Version for Install')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
              "expression": "\"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\""
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "(\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\") or (\"${#stage('Upgrade using Helmfile')['status']}\" == \"FAILED_CONTINUE\" and \"${parameters['INSTALL_ON_UPGRADE_FAILURE']}\" == \"true\") or (\"${#stage('Upgrade using Helmfile')['status']}\" == \"SKIPPED\")"
          },
          "failPipeline": true,
          "type": "expression"
        },
        {
          "context": {
            "expression": "\"${#stage('Push Data to DDP')['status']}\" == \"SUCCEEDED\" or \"${#stage('Push Data to DDP')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        }
      ],
      "refId": "Post Flow Checks",
      "requisiteStageRefIds": [
        "Update Env Version Property in RPT"
      ],
      "type": "checkPreconditions"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "RPT-RC_Quarantine-Environment",
      "master": "oss-fem5s11-eiffel216",
      "name": "Quarantine Environment",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}"
      },
      "refId": "Quarantine Environment",
      "requisiteStageRefIds": [
        "Post Flow Checks"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Post Flow Checks')['status']}\" != \"SUCCEEDED\" and \"${#stage('Post Flow Checks')['status']}\" != \"SKIPPED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "RPT-RC_Update-PipelineStage",
      "markUnstableAsSuccessful": false,
      "master": "oss-fem5s11-eiffel216",
      "name": "Clear Pipeline Stage",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "refId": "Clear Pipeline Stage",
      "requisiteStageRefIds": [
        "Quarantine Environment"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Quarantine Environment')['status']}\" == \"SKIPPED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "RPT-RC_Update-Test-Environment-Status",
      "master": "oss-fem5s11-eiffel216",
      "name": "Update Env Status",
      "parameters": {
        "ENV_NAME": "${parameters[\"ENV_NAME\"]}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}",
        "status": "${parameters[\"ENVIRONMENT_STATUS\"]}"
      },
      "refId": "Update Env Status",
      "requisiteStageRefIds": [
        "Clear Pipeline Stage"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Post Flow Checks')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "name": "End Flow",
      "preconditions": [
        {
          "context": {
            "expression": "\"${#stage('Post Flow Checks')['status']}\" == \"SUCCEEDED\" or \"${#stage('Post Flow Checks')['status']}\" == \"SKIPPED\""
          },
          "failPipeline": true,
          "type": "expression"
        }
      ],
      "refId": "End Flow",
      "requisiteStageRefIds": [
        "Update Env Status"
      ],
      "type": "checkPreconditions"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-HealthCheck-Using-DM",
      "master": "oss-fem7s11-eiffel216",
      "name": "Post_Install_HC",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Post_Install_HC",
      "requisiteStageRefIds": [
        "Install using Helmfile"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Install using Helmfile')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-HealthCheck-Using-DM",
      "master": "oss-fem7s11-eiffel216",
      "name": "Post_UG_HC",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "Post_UG_HC",
      "requisiteStageRefIds": [
        "Upgrade using Helmfile"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" == \"SUCCEEDED\"",
        "type": "expression"
      },
      "type": "jenkins"
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "OSS-Integration-HealthCheck-Using-DM",
      "master": "oss-fem7s11-eiffel216",
      "name": "Pre_UG_HC",
      "parameters": {
        "ARMDOCKER_USER_SECRET": "${parameters['ARMDOCKER_USER_SECRET']}",
        "FUNCTIONAL_USER_SECRET": "${parameters[\"FUNCTIONAL_USER_SECRET\"]}",
        "KUBECONFIG_FILE": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "SLAVE_LABEL": "${trigger['parameters']['SLAVE_LABEL']}"
      },
      "refId": "1",
      "requisiteStageRefIds": [
        "Gather Env Details"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\" and parameters['SKIP_UPGRADE'] ==  \"false\"",
        "type": "expression"
      },
      "type": "jenkins",
      "waitForCompletion": true
    },
    {
      "completeOtherBranchesThenFail": false,
      "continuePipeline": true,
      "failPipeline": false,
      "job": "CICD-UTILS-DDP-Upload",
      "master": "oss-fem7s11-eiffel216",
      "name": "Push Data to DDP",
      "parameters": {
        "DDC_POD_NAME": "eric-oss-ddc",
        "KUBE_CONFIG": "${#stage(\"Gather Env Details\")[\"context\"][\"KUBE_CONFIG\"]}",
        "NAMESPACE": "${#stage(\"Gather Env Details\")[\"context\"][\"NAMESPACE\"]}",
        "SLAVE": "${trigger['parameters']['SLAVE_LABEL']}",
        "SPINNAKER_PIPELINE_ID": "${execution['id']}"
      },
      "refId": "Push Data to DDP",
      "requisiteStageRefIds": [
        "Upgrade using Helmfile"
      ],
      "stageEnabled": {
        "expression": "\"${#stage('Upgrade using Helmfile')['status']}\" != \"SUCCEEDED\" and \"${#stage('Gather Env Details')['status']}\" == \"SUCCEEDED\" and (\"${#stage('Update Env Status to Refreshing')['status']}\" == \"SUCCEEDED\") and \"${parameters['INSTALL_ON_UPGRADE_FAILURE']}\" == \"true\" and \"${parameters['SKIP_DDP_UPLOAD']}\" == \"false\"",
        "type": "expression"
      },
      "type": "jenkins"
    }
  ],
  "triggers": []
}